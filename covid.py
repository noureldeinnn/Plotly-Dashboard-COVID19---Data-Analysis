# -*- coding: utf-8 -*-
"""Covid-19-Plotly/Dash.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a6RPPFXRgupYwNQXDGJUVM5t7dvTJjSp
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np


#I was reading the file from my google drive account, as i was working on google colab.

cw_data = pd.read_csv('country_wise_latest.csv')
c_com_data = pd.read_csv('covid_19_clean_complete.csv')
dw_data = pd.read_csv('day_wise.csv')
fg_data = pd.read_csv('full_grouped.csv')
usac_w_data = pd.read_csv('usa_county_wise.csv')
wm_data = pd.read_csv('worldometer_data.csv')

#cw_data.head()

#c_com_data.head()

#dw_data.head()

#fg_data.head()

#usac_w_data.head()

#wm_data.head()

#dw_data.info()

#cw_data.info()

#conver date to datetime instead of object
# Convert 'Date' column to datetime
dw_data['Date'] = pd.to_datetime(dw_data['Date'])

dw_data.info()

"""Decided to move forward with two datasets
1. Country Wise
2. Day wise

# Check for nulls
"""

print(cw_data.isnull().sum())

print(dw_data.isnull().sum())

#since there are no null values, then we move with the next step: check for the statistics

#cw_data.describe()

#dw_data.describe()

"""Noticed some skewness in the data
**Construct pair plot with kde for further analysis**




"""

#sns.pairplot(cw_data, diag_kind='kde')
#plt.show()

"""# Outliers Handelling"""

#sns.histplot(cw_data['Deaths / 100 Recovered'])

#sns.boxplot(x="Deaths / 100 Recovered", data=cw_data)

cw_data_filtered = cw_data[(cw_data['Deaths / 100 Recovered'] >= 0) & (cw_data['Deaths / 100 Recovered'] <= 20)]

# Check the shape of the new DataFrame
#print(cw_data_filtered.shape)

#cw_data_filtered.info()

#sns.boxplot(x="Deaths / 100 Recovered", data=cw_data_filtered)

#sns.distplot(cw_data_filtered['Deaths / 100 Recovered'],kde=True)

#sns.pairplot(cw_data_filtered,diag_kind='kde')

#sns.pairplot(dw_data, diag_kind='kde')
#plt.show()

#sns.boxplot(x="Deaths / 100 Recovered", data=dw_data)

dw_data_filtered = dw_data[(dw_data['Deaths / 100 Recovered'] >= 0) & (dw_data['Deaths / 100 Recovered'] <= 42)]


# Check the shape of the new DataFrame
#print(dw_data_filtered.shape)

#sns.boxplot(x="Deaths / 100 Recovered", data=dw_data_filtered)

#sns.distplot(dw_data_filtered['Deaths / 100 Recovered'])

#dw_data_filtered.info()

"""# Visualization"""

numeric_columns = cw_data_filtered.select_dtypes(include=[np.number])

# Calculate correlation matrix
correlation = numeric_columns.corr()

#sns.heatmap(correlation, annot=True, cmap='coolwarm',fmt='.2f', linewidths=0.5)
#plt.title("Correlation Matrix")

"""

### **Key Observations**:

1. **Strong Positive Correlations**:
   - **`Confirmed` vs. `Deaths` (0.96)**:
     - A very strong positive correlation. As confirmed cases increase, deaths also tend to increase, which is expected.
   - **`Confirmed` vs. `Recovered` (0.91)**:
     - Indicates that higher confirmed cases lead to more recoveries, as expected in pandemics with large populations.
   - **`Confirmed` vs. `New cases` (0.91)**:
     - Suggests that as total confirmed cases increase, new cases also rise proportionally, reflecting ongoing infections.

2. **Interdependence of Weekly Metrics**:
   - **`Confirmed` vs. `Confirmed last week` (1.00)**:
     - Perfect correlation, likely because `Confirmed last week` is derived directly from `Confirmed`.
   - **`Confirmed last week` vs. `1 week change` (0.96)**:
     - This strong correlation suggests that the weekly change is a key contributor to overall confirmed case growth.

3. **Moderate Correlations**:
   - **`Deaths` vs. `Recovered` (0.87)**:
     - Indicates that recovery and death rates often increase in parallel but aren’t perfectly correlated. This might be due to different healthcare responses or conditions.
   - **`New recovered` vs. `Recovered` (0.92)**:
     - Shows a strong relationship, which is expected since recovered cases grow through daily recoveries.
   - **`Deaths / 100 Cases` vs. `Recovered / 100 Cases` (-0.13)**:
     - A negative correlation indicates that regions with higher death rates often show lower recovery rates.

4. **Weak or Negligible Correlations**:
   - **`1 week % increase` vs. Most Variables**:
     - Very weak correlations (~0.02). This suggests that percentage weekly increases are not heavily dependent on cumulative or absolute values like `Confirmed` or `Deaths`.
   - **`Deaths / 100 Cases` vs. Most Variables**:
     - Weak correlations with variables like `Confirmed`, indicating that death rates don’t strongly depend on cumulative cases alone.

5. **Potential Anomalies**:
   - **`Deaths / 100 Recovered`**:
     - Shows a weak correlation with most other metrics, indicating it might be less relevant for overall trends.

---

### **Actionable Insights**:

1. **Key Drivers of Case Growth**:
   - Focus on `New cases`, `Confirmed last week`, and `1 week change`, as they have strong correlations with cumulative metrics (`Confirmed`, `Deaths`, and `Recovered`).

2. **Death and Recovery Trends**:
   - Explore factors influencing recovery and death rates, especially in areas where these are inversely correlated (e.g., high `Deaths / 100 Cases` correlating with lower `Recovered / 100 Cases`).

3. **Regional Analysis**:
   - Segment the data by `Country/Region` to see how correlations vary regionally. Some countries may show stronger correlations between deaths and confirmed cases due to healthcare systems or interventions.

4. **Weekly Growth Trends**:
   - While `1 week % increase` is weakly correlated with most metrics, it could still serve as a leading indicator for outbreaks when analyzed alongside `New cases`.

"""

day_numeric_columns = dw_data_filtered.select_dtypes(include=[np.number])

# Calculate correlation matrix
correlation = day_numeric_columns.corr()

#sns.heatmap(correlation, annot=True, cmap='coolwarm',fmt='.2f', linewidths=0.5)
#plt.title("Correlation Matrix")

"""Analyzing the **correlation matrix for the day-wise dataset**, here are some observations and insights:

---

### **Key Observations**:

1. **Strong Positive Correlations**:
   - **`Confirmed` vs. `Deaths` (0.97)**:
     - A very strong correlation. This indicates that as the number of confirmed cases increases, deaths also tend to increase proportionally.
   - **`Confirmed` vs. `Recovered` (0.99)**:
     - Almost perfect correlation. This suggests that recovery numbers closely follow confirmed cases, which is expected over time as patients recover.
   - **`Active` vs. `Confirmed` (0.99)**:
     - Strong positive correlation, showing that active cases are directly tied to confirmed cases.
   - **`New cases` vs. `Confirmed` (0.96)**:
     - Indicates that daily new cases significantly contribute to the growth of confirmed cases.
   - **`Recovered` vs. `New recovered` (0.92)**:
     - A strong correlation, as daily new recoveries contribute directly to total recoveries.

2. **Moderate Positive Correlations**:
   - **`Deaths` vs. `New deaths` (0.68)**:
     - Indicates that daily new deaths are a moderate contributor to the overall death toll.
   - **`Deaths / 100 Cases` vs. `New deaths` (0.73)**:
     - This suggests a relationship between daily new deaths and the proportion of deaths per 100 cases.

3. **Weak or Negative Correlations**:
   - **`Deaths / 100 Recovered` vs. Most Variables**:
     - Negative correlation with variables like `Confirmed` (-0.48), `Recovered` (-0.53), and `Active` (-0.39). This implies that as recoveries increase, the deaths per 100 recoveries decrease.
   - **`Recovered / 100 Cases` vs. `Deaths / 100 Cases` (0.11)**:
     - Very weak correlation, reflecting the independent nature of these metrics.

4. **Unique Insight into `No. of countries`**:
   - **`No. of countries` vs. `Deaths / 100 Cases` (0.77)**:
     - A moderately strong correlation suggests that regions with more participating countries report slightly higher death rates.
   - **`No. of countries` vs. `Confirmed` (0.56)**:
     - A positive correlation, indicating that global confirmed cases increase as more countries contribute data.

---

### **Actionable Insights**:

1. **Monitor Key Drivers**:
   - `New cases` and `New deaths` are significant contributors to their respective cumulative metrics (`Confirmed` and `Deaths`). These should be monitored closely to identify trends or outbreaks.

2. **Deaths vs. Recoveries**:
   - The negative correlation between `Deaths / 100 Recovered` and cumulative metrics like `Recovered` and `Confirmed` highlights the importance of improving recovery rates, which reduces the relative impact of deaths.

3. **Region-Wise Analysis**:
   - Investigate how `No. of countries` influences overall statistics. This might reflect underreporting in certain regions or disparities in healthcare systems.

4. **Identify Outliers**:
   - Correlation values like `Recovered / 100 Cases` and `Deaths / 100 Cases` might vary significantly across regions or time periods. Analyze these metrics further to spot anomalies.

5. **Focus on Daily Changes**:
   - Metrics like `New cases`, `New deaths`, and `New recovered` have strong correlations with cumulative data. Analyzing these trends can provide actionable insights for forecasting and intervention planning.

## Insights using Plotly library

### Country wise dataset
"""

import plotly.express as px

# Example data - Replace with your actual country-wise DataFrame
data = cw_data_filtered

# Create a choropleth map
choro = px.choropleth(
    data_frame=data,
    locations='Country/Region',  # The column with country names
    locationmode='country names',  # Match country names to map
    color='Confirmed',  # Metric to color by (e.g., Confirmed cases)
    hover_name='Country/Region',  # Country name for hover tooltip
    hover_data={
        'Confirmed': True,
        'Deaths': True,
        'Recovered': True,
        'Active': True,
        'Deaths / 100 Cases': ':.2f',
        'Recovered / 100 Cases': ':.2f',
        '1 week % increase': ':.2f',
    },
    title='Global COVID-19 Cases by Country',
    color_continuous_scale='Reds',  # Color scale (e.g., Reds for intensity)
    range_color=(0, data['Confirmed'].max())  # Adjust color range
)

# Update layout for better display
choro.update_layout(
    geo=dict(showframe=False, showcoastlines=True, projection_type='natural earth'),
    title_x=0.5,  # Center title
    margin=dict(l=20, r=20, t=50, b=20)  # Adjust margins
)

# Show the plot
#choro.show()

bar = px.bar(
    data.sort_values('Confirmed', ascending=False).head(10),
    x='Country/Region',
    y=['Confirmed', 'Deaths', 'Recovered', 'Active'],
    title='Top 10 Countries by COVID-19 Metrics',
    barmode='group'
)
#bar.show()

scatt = px.scatter_geo(
    data_frame=data,
    locations='Country/Region',
    locationmode='country names',
    size='Confirmed',
    color='Deaths',
    hover_name='Country/Region',
    title='COVID-19 Cases (Bubble Map)',
    projection='natural earth'
)
#scatt.show()

pie = px.pie(
    cw_data_filtered,
    values="Confirmed",
    names="WHO Region",
    title="Proportion of Confirmed Cases by WHO Region"
)
#pie.show()

box = px.box(
    cw_data_filtered,
    x="WHO Region",
    y="Deaths / 100 Cases",
    color="WHO Region",
    title="Box Plot: Death Rate Distribution by WHO Region"
)
#box.show()

hist = px.histogram(
    cw_data_filtered,
    x="Confirmed",
    nbins=20,
    title="Histogram: Distribution of Confirmed Cases Across Countries"
)
#hist.show()



sun = px.sunburst(
    cw_data_filtered,
    path=["WHO Region", "Country/Region"],
    values="Confirmed",
    title="Sunburst Chart: Contribution to Global Confirmed Cases"
)
#sun.show()

"""### Day-wise insights"""

line = px.line(dw_data_filtered, x='Date', y=['Confirmed', 'Deaths', 'Recovered', 'Active'],
              title='COVID-19 Trend Over Time', labels={'value': 'Cases', 'variable': 'Category'})

line.update_layout(
    xaxis_title='Date',
    yaxis_title='Number of Cases',
    legend_title='Legend'
)


#line.show()

area = px.area(
    dw_data_filtered,
    x="Date",
    y=["Active", "Recovered", "Deaths"],  # Metrics to stack
    color_discrete_sequence=px.colors.qualitative.Set1,
    title="Stacked Area Chart: Active, Recovered, and Deaths Over Time"
)
#area.show()

